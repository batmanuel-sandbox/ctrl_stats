==========
ctrl_stats
==========

Overview
========

This package contains commands to ingest Condor log files into databases.
Condor emits "records" of Condor events that happen during execution. The
ctrl_stats package commands group all of these records according to Condor
job id in order to get an overview of what happened during the job.  These 
records are then reduced into two tables, one that describes each submitted
dag node and one that describes all of the events that happens to each 
condor job id.  Note that the dag node can be submitted more than one time
for a variety of reasons.  All of this information is captured in the
database records.

Usage
=====
The following commands are available:

condorLogIngest.py - Takes a list of log files and ingests them into a
database 

usage: condorLogIngest.py [-h] -H HOST [-p PORT] -d DATABASE -f FILENAMES
                          [FILENAMES ...] [-v]

example:
condorLogIngest.py -H lsst10 -d testing -f worker.log

-------------
condorDirectoryIngest - given a directory in ~/condor_scratch, take the
preJob, worker and postJob log files and add them into a database named
after the directory.

usage: condorDirectoryIngest -H HOST [-p PORT] -d directory

example:
condorDirectoryIngest -H lsst10 -p 3306 -d srp_2012_0925_160117

-------------
condorLogInfo.py - a debugging utility to view record groups.  This was used
as a debugging tool, but is useful in viewing records without having to 
do a complete database ingest.

usage: condorLogInfo.py [-h] [-v] [-c CONDORIDS [CONDORIDS ...]] -f FILENAMES
                        [FILENAMES ...]

example:
condorLogInfo.py -c 630.000.000 -f srp_2012_0925_160117/*nodes.log

-------------
Further information can be found here:

http://dev.lsstcorp.org/trac/wiki/Orchestration/Condor/Statistics
